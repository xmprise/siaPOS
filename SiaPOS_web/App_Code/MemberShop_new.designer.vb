'------------------------------------------------------------------------------
' <auto-generated>
'     이 코드는 도구를 사용하여 생성되었습니다.
'     런타임 버전:4.0.30319.239
'
'     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
'     이러한 변경 내용이 손실됩니다.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="SibalChk2011")>  _
Partial Public Class MemberShop_newDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "확장성 메서드 정의"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertMemberShop(instance As MemberShop)
    End Sub
  Partial Private Sub UpdateMemberShop(instance As MemberShop)
    End Sub
  Partial Private Sub DeleteMemberShop(instance As MemberShop)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("SibalChk2011ConnectionString2").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property MemberShop() As System.Data.Linq.Table(Of MemberShop)
		Get
			Return Me.GetTable(Of MemberShop)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.DeleteMemberShop")>  _
	Public Function DeleteMemberShop(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="MemShopID", DbType:="Int")> ByVal memShopID As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), memShopID)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsertMemberShop")>  _
	Public Function InsertMemberShop(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserName", DbType:="NVarChar(50)")> ByVal userName As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserShopName", DbType:="NVarChar(50)")> ByVal userShopName As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserShopType", DbType:="NVarChar(50)")> ByVal userShopType As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ShopTableAccount", DbType:="Int")> ByVal shopTableAccount As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="MemShopID", DbType:="Int")> ByRef memShopID As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), userName, userShopName, userShopType, shopTableAccount, memShopID)
		memShopID = CType(result.GetParameterValue(4),System.Nullable(Of Integer))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SelectMemberShop")>  _
	Public Function SelectMemberShop() As ISingleResult(Of SelectMemberShopResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,ISingleResult(Of SelectMemberShopResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.UpdateMemberShop")>  _
	Public Function UpdateMemberShop(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="MemberShopID", DbType:="Int")> ByVal memberShopID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserName", DbType:="NVarChar(50)")> ByVal userName As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserShopName", DbType:="NVarChar(50)")> ByVal userShopName As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserShopType", DbType:="NVarChar(50)")> ByVal userShopType As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ShopTableAccount", DbType:="Int")> ByVal shopTableAccount As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), memberShopID, userName, userShopName, userShopType, shopTableAccount)
		Return CType(result.ReturnValue,Integer)
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="Person.MemberShop")>  _
Partial Public Class MemberShop
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MemShopID As Integer
	
	Private _UserName As String
	
	Private _UserShopName As String
	
	Private _UserShopType As String
	
	Private _ShopTableAccount As Integer
	
    #Region "확장성 메서드 정의"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMemShopIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMemShopIDChanged()
    End Sub
    Partial Private Sub OnUserNameChanging(value As String)
    End Sub
    Partial Private Sub OnUserNameChanged()
    End Sub
    Partial Private Sub OnUserShopNameChanging(value As String)
    End Sub
    Partial Private Sub OnUserShopNameChanged()
    End Sub
    Partial Private Sub OnUserShopTypeChanging(value As String)
    End Sub
    Partial Private Sub OnUserShopTypeChanged()
    End Sub
    Partial Private Sub OnShopTableAccountChanging(value As Integer)
    End Sub
    Partial Private Sub OnShopTableAccountChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MemShopID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property MemShopID() As Integer
		Get
			Return Me._MemShopID
		End Get
		Set
			If ((Me._MemShopID = value)  _
						= false) Then
				Me.OnMemShopIDChanging(value)
				Me.SendPropertyChanging
				Me._MemShopID = value
				Me.SendPropertyChanged("MemShopID")
				Me.OnMemShopIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me.OnUserNameChanging(value)
				Me.SendPropertyChanging
				Me._UserName = value
				Me.SendPropertyChanged("UserName")
				Me.OnUserNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserShopName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property UserShopName() As String
		Get
			Return Me._UserShopName
		End Get
		Set
			If (String.Equals(Me._UserShopName, value) = false) Then
				Me.OnUserShopNameChanging(value)
				Me.SendPropertyChanging
				Me._UserShopName = value
				Me.SendPropertyChanged("UserShopName")
				Me.OnUserShopNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserShopType", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property UserShopType() As String
		Get
			Return Me._UserShopType
		End Get
		Set
			If (String.Equals(Me._UserShopType, value) = false) Then
				Me.OnUserShopTypeChanging(value)
				Me.SendPropertyChanging
				Me._UserShopType = value
				Me.SendPropertyChanged("UserShopType")
				Me.OnUserShopTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShopTableAccount", DbType:="Int NOT NULL")>  _
	Public Property ShopTableAccount() As Integer
		Get
			Return Me._ShopTableAccount
		End Get
		Set
			If ((Me._ShopTableAccount = value)  _
						= false) Then
				Me.OnShopTableAccountChanging(value)
				Me.SendPropertyChanging
				Me._ShopTableAccount = value
				Me.SendPropertyChanged("ShopTableAccount")
				Me.OnShopTableAccountChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

Partial Public Class SelectMemberShopResult
	
	Private _MemShopID As Integer
	
	Private _UserName As String
	
	Private _UserShopName As String
	
	Private _UserShopType As String
	
	Private _ShopTableAccount As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MemShopID", DbType:="Int NOT NULL")>  _
	Public Property MemShopID() As Integer
		Get
			Return Me._MemShopID
		End Get
		Set
			If ((Me._MemShopID = value)  _
						= false) Then
				Me._MemShopID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me._UserName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserShopName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property UserShopName() As String
		Get
			Return Me._UserShopName
		End Get
		Set
			If (String.Equals(Me._UserShopName, value) = false) Then
				Me._UserShopName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserShopType", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property UserShopType() As String
		Get
			Return Me._UserShopType
		End Get
		Set
			If (String.Equals(Me._UserShopType, value) = false) Then
				Me._UserShopType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShopTableAccount", DbType:="Int NOT NULL")>  _
	Public Property ShopTableAccount() As Integer
		Get
			Return Me._ShopTableAccount
		End Get
		Set
			If ((Me._ShopTableAccount = value)  _
						= false) Then
				Me._ShopTableAccount = value
			End If
		End Set
	End Property
End Class
