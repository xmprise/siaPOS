'------------------------------------------------------------------------------
' <auto-generated>
'     이 코드는 도구를 사용하여 생성되었습니다.
'     런타임 버전:4.0.30319.239
'
'     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
'     이러한 변경 내용이 손실됩니다.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="SibalChk2011")>  _
Partial Public Class MemberInfo_newDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "확장성 메서드 정의"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertMemberInfo(instance As MemberInfo)
    End Sub
  Partial Private Sub UpdateMemberInfo(instance As MemberInfo)
    End Sub
  Partial Private Sub DeleteMemberInfo(instance As MemberInfo)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("SibalChk2011ConnectionString2").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property MemberInfo() As System.Data.Linq.Table(Of MemberInfo)
		Get
			Return Me.GetTable(Of MemberInfo)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.DeleteMemberInfo")>  _
	Public Function DeleteMemberInfo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="MemberID", DbType:="Int")> ByVal memberID As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), memberID)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsertMemberInfo")>  _
	Public Function InsertMemberInfo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserName", DbType:="NVarChar(50)")> ByVal userName As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="RealName", DbType:="NVarChar(50)")> ByVal realName As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Gender", DbType:="NVarChar(50)")> ByVal gender As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Phone", DbType:="NVarChar(50)")> ByVal phone As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Region", DbType:="NVarChar(50)")> ByVal region As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Address", DbType:="NVarChar(50)")> ByVal address As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Intro", DbType:="NVarChar(3850)")> ByVal intro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="MemberID", DbType:="Int")> ByRef memberID As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), userName, realName, gender, phone, region, address, intro, memberID)
		memberID = CType(result.GetParameterValue(7),System.Nullable(Of Integer))
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SelectMemberInfo")>  _
	Public Function SelectMemberInfo() As ISingleResult(Of SelectMemberInfoResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,ISingleResult(Of SelectMemberInfoResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.UpdateMemberInfo")>  _
	Public Function UpdateMemberInfo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="MemberID", DbType:="Int")> ByVal memberID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="UserName", DbType:="NVarChar(50)")> ByVal userName As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="RealName", DbType:="NVarChar(50)")> ByVal realName As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Gender", DbType:="NVarChar(50)")> ByVal gender As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Phone", DbType:="NVarChar(50)")> ByVal phone As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Region", DbType:="NVarChar(50)")> ByVal region As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Address", DbType:="NVarChar(50)")> ByVal address As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Intro", DbType:="NVarChar(3850)")> ByVal intro As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), memberID, userName, realName, gender, phone, region, address, intro)
		Return CType(result.ReturnValue,Integer)
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="Person.MemberInfo")>  _
Partial Public Class MemberInfo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MemberID As Integer
	
	Private _UserName As String
	
	Private _RealName As String
	
	Private _Gender As String
	
	Private _Phone As String
	
	Private _Region As String
	
	Private _Address As String
	
	Private _Intro As String
	
    #Region "확장성 메서드 정의"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMemberIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMemberIDChanged()
    End Sub
    Partial Private Sub OnUserNameChanging(value As String)
    End Sub
    Partial Private Sub OnUserNameChanged()
    End Sub
    Partial Private Sub OnRealNameChanging(value As String)
    End Sub
    Partial Private Sub OnRealNameChanged()
    End Sub
    Partial Private Sub OnGenderChanging(value As String)
    End Sub
    Partial Private Sub OnGenderChanged()
    End Sub
    Partial Private Sub OnPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneChanged()
    End Sub
    Partial Private Sub OnRegionChanging(value As String)
    End Sub
    Partial Private Sub OnRegionChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnIntroChanging(value As String)
    End Sub
    Partial Private Sub OnIntroChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MemberID", DbType:="Int NOT NULL")>  _
	Public Property MemberID() As Integer
		Get
			Return Me._MemberID
		End Get
		Set
			If ((Me._MemberID = value)  _
						= false) Then
				Me.OnMemberIDChanging(value)
				Me.SendPropertyChanging
				Me._MemberID = value
				Me.SendPropertyChanged("MemberID")
				Me.OnMemberIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me.OnUserNameChanging(value)
				Me.SendPropertyChanging
				Me._UserName = value
				Me.SendPropertyChanged("UserName")
				Me.OnUserNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RealName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property RealName() As String
		Get
			Return Me._RealName
		End Get
		Set
			If (String.Equals(Me._RealName, value) = false) Then
				Me.OnRealNameChanging(value)
				Me.SendPropertyChanging
				Me._RealName = value
				Me.SendPropertyChanged("RealName")
				Me.OnRealNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gender", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Gender() As String
		Get
			Return Me._Gender
		End Get
		Set
			If (String.Equals(Me._Gender, value) = false) Then
				Me.OnGenderChanging(value)
				Me.SendPropertyChanging
				Me._Gender = value
				Me.SendPropertyChanged("Gender")
				Me.OnGenderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Phone() As String
		Get
			Return Me._Phone
		End Get
		Set
			If (String.Equals(Me._Phone, value) = false) Then
				Me.OnPhoneChanging(value)
				Me.SendPropertyChanging
				Me._Phone = value
				Me.SendPropertyChanged("Phone")
				Me.OnPhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Region", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Region() As String
		Get
			Return Me._Region
		End Get
		Set
			If (String.Equals(Me._Region, value) = false) Then
				Me.OnRegionChanging(value)
				Me.SendPropertyChanging
				Me._Region = value
				Me.SendPropertyChanged("Region")
				Me.OnRegionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Address() As String
		Get
			Return Me._Address
		End Get
		Set
			If (String.Equals(Me._Address, value) = false) Then
				Me.OnAddressChanging(value)
				Me.SendPropertyChanging
				Me._Address = value
				Me.SendPropertyChanged("Address")
				Me.OnAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Intro", DbType:="NVarChar(MAX)")>  _
	Public Property Intro() As String
		Get
			Return Me._Intro
		End Get
		Set
			If (String.Equals(Me._Intro, value) = false) Then
				Me.OnIntroChanging(value)
				Me.SendPropertyChanging
				Me._Intro = value
				Me.SendPropertyChanged("Intro")
				Me.OnIntroChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

Partial Public Class SelectMemberInfoResult
	
	Private _MemberID As Integer
	
	Private _UserName As String
	
	Private _RealName As String
	
	Private _Gender As String
	
	Private _Phone As String
	
	Private _Region As String
	
	Private _Address As String
	
	Private _Intro As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MemberID", DbType:="Int NOT NULL")>  _
	Public Property MemberID() As Integer
		Get
			Return Me._MemberID
		End Get
		Set
			If ((Me._MemberID = value)  _
						= false) Then
				Me._MemberID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me._UserName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RealName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property RealName() As String
		Get
			Return Me._RealName
		End Get
		Set
			If (String.Equals(Me._RealName, value) = false) Then
				Me._RealName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gender", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Gender() As String
		Get
			Return Me._Gender
		End Get
		Set
			If (String.Equals(Me._Gender, value) = false) Then
				Me._Gender = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Phone() As String
		Get
			Return Me._Phone
		End Get
		Set
			If (String.Equals(Me._Phone, value) = false) Then
				Me._Phone = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Region", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Region() As String
		Get
			Return Me._Region
		End Get
		Set
			If (String.Equals(Me._Region, value) = false) Then
				Me._Region = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Address() As String
		Get
			Return Me._Address
		End Get
		Set
			If (String.Equals(Me._Address, value) = false) Then
				Me._Address = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Intro", DbType:="NVarChar(MAX)")>  _
	Public Property Intro() As String
		Get
			Return Me._Intro
		End Get
		Set
			If (String.Equals(Me._Intro, value) = false) Then
				Me._Intro = value
			End If
		End Set
	End Property
End Class
